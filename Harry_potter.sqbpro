<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="F:/Harry_potter.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="1434"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,8:mainChapters"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Chapters" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="98"/><column index="2" value="257"/><column index="3" value="82"/><column index="4" value="128"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Movies" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="82"/><column index="2" value="300"/><column index="3" value="114"/><column index="4" value="82"/><column index="5" value="107"/><column index="6" value="121"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="covid_deaths" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="92"/><column index="2" value="92"/><column index="3" value="95"/><column index="4" value="91"/><column index="5" value="103"/><column index="6" value="108"/><column index="7" value="104"/><column index="8" value="201"/><column index="9" value="119"/><column index="10" value="115"/><column index="11" value="212"/><column index="12" value="216"/><column index="13" value="212"/><column index="14" value="300"/><column index="15" value="227"/><column index="16" value="223"/><column index="17" value="300"/><column index="18" value="166"/><column index="19" value="116"/><column index="20" value="224"/><column index="21" value="133"/><column index="22" value="241"/><column index="23" value="213"/><column index="24" value="300"/><column index="25" value="230"/><column index="26" value="300"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">SELECT  * FROM Movies
-- High Budget Movie
-- High Budget Movie
SELECT MovieTitle, MAX(Budget) AS Maxbudget
FROM Movies; 
-- Low Budget Movie
-- Low Budget Movie
SELECT MovieTitle, MIN(Budget) AS lowbudget
FROM Movies;
-- Highest Grossing Movie
SELECT MovieTitle, MAX(BoxOffice) AS MaxBoxOffice
FROM Movies;
-- Least Grossing Movie
SELECT MovieTitle, min(BoxOffice) AS MinBoxOffice
FROM Movies;
SELECT  * FROM Chapters
-- Checking the numbers of chapters according to the movies
SELECT Movies.MovieID,Chapters.ChapterName,Movies.MovieTitle
FROM Movies
LEFT JOIN Chapters
ON Movies.MovieID=Chapters.MovieID

-- Checking the count of each Houses
--  Checking the count of each Houses
SELECT count(House) FROM Characters
WHERE House = &quot;Ravenclaw&quot;   
SELECT count(House) FROM Characters
WHERE House = &quot;Slytherin&quot;
SELECT count(House) FROM Characters
WHERE House =  &quot;Gryffindor&quot;
SELECT count(House) FROM Characters
WHERE House =   &quot;Hufflepuff&quot;

SELECT *From Characters

SELECT CharacterName,Species,Patronus
FROM Characters
WHERE  Patronus  IS NOT NULL;

-- which character spoke most of the Dialogue
-- which character spoke most of the Dialogue
SELECT Characters.CharacterName,Dialogue.Dialogue
FROM Characters
LEFT JOIN Dialogue
ON Characters.CharacterID = Dialogue.CharacterID

SELECT * FROM Places

SELECT * FROM Spells
WHERE Light is NOT NULL;

SELECT* FROM Dialogue

SELECT Chapters.MovieChapter,Dialogue.CharacterID, Dialogue.Dialogue
FROM Chapters
INNER JOIN Dialogue
on Chapters.ChapterID = Dialogue.ChapterID</sql><current_tab id="0"/></tab_sql></sqlb_project>
